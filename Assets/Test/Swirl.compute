#pragma kernel Main

#include "HLSLSupport.cginc"
#include "Packages/jp.keijiro.pcx/Runtime/Shaders/Common.cginc"

StructuredBuffer<float4> SourceBuffer;
RWStructuredBuffer<float4> OutputBuffer;

CBUFFER_START(Params)
    float Time;
CBUFFER_END

[numthreads(128, 1, 1)]
void Main(uint id : SV_DispatchThreadID)
{
    float4 pt = SourceBuffer[id];
    half3 c = PcxDecodeColor(asuint(pt.w));

    float phi = atan2(pt.y, pt.x);
    float l = length(pt.xy);

    phi += sin(l * 0.5 - Time * 0.98) * 0.8;

    pt.xy = float2(cos(phi), sin(phi)) * (l + (1 + sin(l * 0.43 - Time * 0.83)) * 2);
    pt.z += sin(l * 0.23 - Time * 1.13) * 3;

    c *= 1 + pow(abs(sin(l * 0.27 - Time * 1.1)), 20);

    pt.w = asfloat(PcxEncodeColor(c));
    OutputBuffer[id] = pt;
}
